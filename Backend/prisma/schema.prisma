// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String? 
  email String @unique
  password String
  role Role @default(CANDIDATE)
  status Boolean @default(true)
  candidateProfile CandidateProfile?
}

// 1 - 1
model CandidateProfile {
  id Int @id @default(autoincrement())
  fullname String
  gender Gender
  phone String
  cv String
  dateofbirth DateTime @db.Date
  address String
  openToWork Boolean @default(false)
  status Boolean @default(true)
  user User @relation(fields: [userId], references: [id])
  userId Int @unique

  candidateLanguages CandidateLanguages[]
}

model Language{
  name String @id 

  candidateLanguages CandidateLanguages[]
}

// many-to-many
model CandidateLanguages {
  candidateProfile CandidateProfile @relation(fields: [candidateProfileId], references: [id])
  candidateProfileId Int

  language Language @relation(fields: [languageId], references: [name])
  languageId String

  level Level @default(BEGINNER)
  @@unique([candidateProfileId])
}


enum Level {
  NATIVE
  FLUENT
  BEGINNER
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  ADMIN
  RECRUITER
  CANDIDATE
}